import java.io.*;
import java.util.*;
public class Main{
public static void main(String[] args) throws Exception {
   Scanner scn = new Scanner(System.in);
   String exp = scn.nextLine();
   System.out.println(infixEval(exp));
   }
 public static int infixEval(String exp){
     Stack<Integer> num = new Stack<>();
     Stack<Character> optrs = new Stack<>();
     for(int i=0;i<exp.length();i++){
         char ch = exp.charAt(i);
         if(ch >= '0' && ch <='9'){
             num.push(ch - '0');
         }else if(ch == '('){
             optrs.push(ch);
         }else if(ch == ')'){
             while(optrs.peek() != '(' ){
                 //solve
                 char optr = optrs.pop();
                 int op2 = num.pop();
                 int op1 = num.pop();
                 int ans  = solve(optr,op1,op2);
                 num.push(ans);
             }
             optrs.pop();
           
         }else if(ch == '+' || ch =='-' || ch =='*' || ch=='/' ){
             //process
             while(optrs.size()>0 && optrs.peek() != '(' && pred(optrs.peek()) >= pred(ch)){
                 char optr = optrs.pop();
                 int op2 =  num.pop();
                 int op1 = num.pop();
                 int ans  = solve(optr,op1,op2);
                 num.push(ans);
             }
             optrs.push(ch);
         }
     }
     while(optrs.size()>0){
                 char optr = optrs.pop();
                 int op2 =  num.pop();
                 int op1 = num.pop();
                 int ans  = solve(optr,op1,op2);
                 num.push(ans);
     }
     return num.peek();
 }
 public static int solve(char op,int num1, int num2){
     if(op == '+'){
         return num1+num2;
     }else if(op == '-'){
         return num1-num2;
     }else if(op == '*'){
         return num1*num2;
     }else{
         return num1/num2;
     }
 }
 public static int pred(char optr){
     if(optr == '-' || optr == '+'){
         return 1;
     }else{
         return 2;
     }
 }
}
